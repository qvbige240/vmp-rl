/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: pbc-vmon.proto */

#ifndef PROTOBUF_C_pbc_2dvmon_2eproto__INCLUDED
#define PROTOBUF_C_pbc_2dvmon_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _PbcVmonReq PbcVmonReq;
typedef struct _PbcVmonRsp PbcVmonRsp;


/* --- enums --- */


/* --- messages --- */

struct  _PbcVmonReq
{
  ProtobufCMessage base;
  uint32_t id;
};
#define PBC_VMON_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&pbc_vmon_req__descriptor) \
    , 0 }


struct  _PbcVmonRsp
{
  ProtobufCMessage base;
  uint32_t id;
  uint32_t count;
};
#define PBC_VMON_RSP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&pbc_vmon_rsp__descriptor) \
    , 0, 0 }


/* PbcVmonReq methods */
void   pbc_vmon_req__init
                     (PbcVmonReq         *message);
size_t pbc_vmon_req__get_packed_size
                     (const PbcVmonReq   *message);
size_t pbc_vmon_req__pack
                     (const PbcVmonReq   *message,
                      uint8_t             *out);
size_t pbc_vmon_req__pack_to_buffer
                     (const PbcVmonReq   *message,
                      ProtobufCBuffer     *buffer);
PbcVmonReq *
       pbc_vmon_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   pbc_vmon_req__free_unpacked
                     (PbcVmonReq *message,
                      ProtobufCAllocator *allocator);
/* PbcVmonRsp methods */
void   pbc_vmon_rsp__init
                     (PbcVmonRsp         *message);
size_t pbc_vmon_rsp__get_packed_size
                     (const PbcVmonRsp   *message);
size_t pbc_vmon_rsp__pack
                     (const PbcVmonRsp   *message,
                      uint8_t             *out);
size_t pbc_vmon_rsp__pack_to_buffer
                     (const PbcVmonRsp   *message,
                      ProtobufCBuffer     *buffer);
PbcVmonRsp *
       pbc_vmon_rsp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   pbc_vmon_rsp__free_unpacked
                     (PbcVmonRsp *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*PbcVmonReq_Closure)
                 (const PbcVmonReq *message,
                  void *closure_data);
typedef void (*PbcVmonRsp_Closure)
                 (const PbcVmonRsp *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor pbc_vmon_req__descriptor;
extern const ProtobufCMessageDescriptor pbc_vmon_rsp__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_pbc_2dvmon_2eproto__INCLUDED */
