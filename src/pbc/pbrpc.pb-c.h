/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: pbrpc.proto */

#ifndef PROTOBUF_C_pbrpc_2eproto__INCLUDED
#define PROTOBUF_C_pbrpc_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _PbcRpcRequest PbcRpcRequest;
typedef struct _PbcRpcResponse PbcRpcResponse;


/* --- enums --- */


/* --- messages --- */

struct  _PbcRpcRequest
{
  ProtobufCMessage base;
  uint64_t id;
  /*
   * The method string should be in the format "service.method"
   */
  char *method;
  /*
   * Params are protobuf encoded request message for the particualar method
   */
  protobuf_c_boolean has_params;
  ProtobufCBinaryData params;
};
#define PBC_RPC_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&pbc_rpc_request__descriptor) \
    , 0, NULL, 0, {0,NULL} }


struct  _PbcRpcResponse
{
  ProtobufCMessage base;
  uint64_t id;
  /*
   * Result is the protobuf encoded response message for the particular method
   */
  ProtobufCBinaryData result;
  char *error;
};
#define PBC_RPC_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&pbc_rpc_response__descriptor) \
    , 0, {0,NULL}, NULL }


/* PbcRpcRequest methods */
void   pbc_rpc_request__init
                     (PbcRpcRequest         *message);
size_t pbc_rpc_request__get_packed_size
                     (const PbcRpcRequest   *message);
size_t pbc_rpc_request__pack
                     (const PbcRpcRequest   *message,
                      uint8_t             *out);
size_t pbc_rpc_request__pack_to_buffer
                     (const PbcRpcRequest   *message,
                      ProtobufCBuffer     *buffer);
PbcRpcRequest *
       pbc_rpc_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   pbc_rpc_request__free_unpacked
                     (PbcRpcRequest *message,
                      ProtobufCAllocator *allocator);
/* PbcRpcResponse methods */
void   pbc_rpc_response__init
                     (PbcRpcResponse         *message);
size_t pbc_rpc_response__get_packed_size
                     (const PbcRpcResponse   *message);
size_t pbc_rpc_response__pack
                     (const PbcRpcResponse   *message,
                      uint8_t             *out);
size_t pbc_rpc_response__pack_to_buffer
                     (const PbcRpcResponse   *message,
                      ProtobufCBuffer     *buffer);
PbcRpcResponse *
       pbc_rpc_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   pbc_rpc_response__free_unpacked
                     (PbcRpcResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*PbcRpcRequest_Closure)
                 (const PbcRpcRequest *message,
                  void *closure_data);
typedef void (*PbcRpcResponse_Closure)
                 (const PbcRpcResponse *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor pbc_rpc_request__descriptor;
extern const ProtobufCMessageDescriptor pbc_rpc_response__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_pbrpc_2eproto__INCLUDED */
